{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UDESH\\\\Desktop\\\\Avo\\\\TestApp_avonet\\\\frontend\\\\src\\\\components\\\\Tasks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const user = localStorage.getItem(\"token\");\n  const date = new Date();\n  const [data, setData] = useState({\n    title: \"\",\n    description: \"\",\n    user: user,\n    status: \"pending\",\n    date: date.getTime(),\n    id: \"\"\n  });\n\n  const viewProjects = () => {\n    try {\n      const url = \"http://localhost:8080/api/projects/\";\n      axios.get(url, {\n        params: {\n          token: data.user\n        }\n      }).then(response => {\n        const arr = response.data;\n        console.log(arr);\n        arr.map(item => {\n          console.log(\"i'm inside\");\n          setData({\n            title: item.title,\n            description: item.description,\n            date: item.date,\n            status: item.status,\n            id: item._id\n          });\n        });\n        console.log(data);\n      });\n    } catch (error) {\n      console.log(error.response.statusText);\n    }\n  };\n\n  useEffect(() => {\n    viewProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      display: 'flex',\n      gridGap: '20px',\n      justifyContent: 'center',\n      alignItems: 'center',\n      // gridTemplateColumns: 'repeat(3, calc(33.33% - 20px))',\n      flexWrap: 'wrap',\n      marginTop: '100px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasks, \"5GtanO56TRSwmNsgAeYbrnX6hYA=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/UDESH/Desktop/Avo/TestApp_avonet/frontend/src/components/Tasks/index.jsx"],"names":["useState","useEffect","axios","useNavigate","styles","Tasks","user","localStorage","getItem","date","Date","data","setData","title","description","status","getTime","id","viewProjects","url","get","params","token","then","response","arr","console","log","map","item","_id","error","statusText","display","gridGap","justifyContent","alignItems","flexWrap","marginTop"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;AACA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAC7Ba,IAAAA,KAAK,EAAE,EADsB;AAE7BC,IAAAA,WAAW,EAAE,EAFgB;AAG7BR,IAAAA,IAAI,EAAEA,IAHuB;AAI7BS,IAAAA,MAAM,EAAE,SAJqB;AAK7BN,IAAAA,IAAI,EAAEA,IAAI,CAACO,OAAL,EALuB;AAM7BC,IAAAA,EAAE,EAAE;AANyB,GAAD,CAAhC;;AAQA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAI;AACA,YAAMC,GAAG,GAAG,qCAAZ;AACAjB,MAAAA,KAAK,CAACkB,GAAN,CAAUD,GAAV,EAAe;AAAEE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAEX,IAAI,CAACL;AAAd;AAAV,OAAf,EAAiDiB,IAAjD,CAAuDC,QAAD,IAAc;AAChE,cAAMC,GAAG,GAAGD,QAAQ,CAACb,IAArB;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAA,QAAAA,GAAG,CAACG,GAAJ,CAASC,IAAD,IAAU;AACdH,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAf,UAAAA,OAAO,CACH;AACQC,YAAAA,KAAK,EAAEgB,IAAI,CAAChB,KADpB;AAEQC,YAAAA,WAAW,EAAEe,IAAI,CAACf,WAF1B;AAGQL,YAAAA,IAAI,EAAEoB,IAAI,CAACpB,IAHnB;AAIQM,YAAAA,MAAM,EAAEc,IAAI,CAACd,MAJrB;AAKQE,YAAAA,EAAE,EAAEY,IAAI,CAACC;AALjB,WADG,CAAP;AAUH,SAZD;AAcAJ,QAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACH,OAlBD;AAoBH,KAtBD,CAsBE,OAAOoB,KAAP,EAAc;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACP,QAAN,CAAeQ,UAA3B;AACH;AACJ,GA1BD;;AA4BA/B,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAS,IAAA,KAAK,EAAE;AACZe,MAAAA,OAAO,EAAE,MADG;AAEZC,MAAAA,OAAO,EAAE,MAFG;AAGZC,MAAAA,cAAc,EAAE,QAHJ;AAIZC,MAAAA,UAAU,EAAE,QAJA;AAKZ;AACAC,MAAAA,QAAQ,EAAE,MANE;AAOZC,MAAAA,SAAS,EAAE;AAPC;AAAhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAxDD;;GAAMjC,K;;KAAAA,K;AA0DN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst Tasks = () => {\r\n    const user = localStorage.getItem(\"token\");\r\n    const date = new Date();\r\n    const [data, setData] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        user: user,\r\n        status: \"pending\",\r\n        date: date.getTime(),\r\n        id: \"\",\r\n    });\r\n    const viewProjects = () => {\r\n        try {\r\n            const url = \"http://localhost:8080/api/projects/\";\r\n            axios.get(url, { params: { token: data.user } }).then((response) => {\r\n                const arr = response.data;\r\n                console.log(arr);\r\n                arr.map((item) => {\r\n                    console.log(\"i'm inside\");\r\n                    setData( \r\n                        {   \r\n                                title: item.title,\r\n                                description: item.description,\r\n                                date: item.date,\r\n                                status: item.status,\r\n                                id: item._id\r\n                            }\r\n                            \r\n                    )\r\n                });\r\n\r\n                console.log(data);\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.log(error.response.statusText);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        viewProjects();\r\n    }, []);\r\n\r\n    return (\r\n        <section style={{\r\n            display: 'flex',\r\n            gridGap: '20px',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            // gridTemplateColumns: 'repeat(3, calc(33.33% - 20px))',\r\n            flexWrap: 'wrap',\r\n            marginTop: '100px',\r\n        }}>\r\n            {/*  */}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}