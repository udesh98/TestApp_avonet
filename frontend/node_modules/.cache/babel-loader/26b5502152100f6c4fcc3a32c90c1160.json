{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UDESH\\\\Desktop\\\\Avo\\\\TestApp_avonet\\\\frontend\\\\src\\\\components\\\\TaskItems\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, NavLink } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport Swal from 'sweetalert2'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { fa-clock-o } from '@fortawesome/free-solid-svg-icons';\n\nimport Tasks from \"../Tasks\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskItems = props => {\n  _s();\n\n  const [tasks, setTasks] = useState({\n    result: []\n  });\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState(\"\");\n\n  const viewTasks = async () => {\n    try {\n      const url = \"http://localhost:8080/api/projects/tasks/\";\n      await axios.get(url, {\n        params: {\n          projectId: props.details.projectId\n        }\n      }).then(response => {\n        const arr = response.data;\n        console.log(arr.length);\n\n        if (arr.length === 0) {\n          setError(true);\n          setErrorText(\"No tasks have been assigned for this project!\");\n        }\n\n        ;\n        console.log(arr);\n        setTasks(prevTasks => {\n          return { ...prevTasks,\n            result: arr\n          };\n        });\n      });\n    } catch (error) {\n      console.log(error.response.statusText);\n    }\n  };\n\n  useEffect(() => {\n    viewTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.projectTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this), !error && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Assigned user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"right\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), tasks.result.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                align: \"left\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                align: \"left\",\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                align: \"left\",\n                children: item.assignedUserEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                align: \"right\",\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskItems, \"4aio24nMybOf4EguZcXvvjQLwh4=\");\n\n_c = TaskItems;\nexport default TaskItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItems\");","map":{"version":3,"sources":["C:/Users/UDESH/Desktop/Avo/TestApp_avonet/frontend/src/components/TaskItems/index.jsx"],"names":["useState","useEffect","axios","useNavigate","NavLink","styles","Swal","Tasks","useDispatch","TaskItems","props","tasks","setTasks","result","error","setError","errorText","setErrorText","viewTasks","url","get","params","projectId","details","then","response","arr","data","console","log","length","prevTasks","statusText","projectTitle","map","item","title","description","assignedUserEmail","status","_id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, NavLink } from \"react-router-dom\";\r\nimport styles from \"./styles.module.css\";\r\nimport Swal from 'sweetalert2';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { fa-clock-o } from '@fortawesome/free-solid-svg-icons';\r\nimport Tasks from \"../Tasks\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst TaskItems = (props) => {\r\n    const [tasks, setTasks] = useState({\r\n        result: []\r\n    });\r\n\r\n    const [error, setError] = useState(false);\r\n    const [errorText, setErrorText] = useState(\"\");\r\n\r\n    const viewTasks = async () => {\r\n        try {\r\n            const url = \"http://localhost:8080/api/projects/tasks/\";\r\n            await axios.get(url, { params: { projectId: props.details.projectId } }).then((response) => {\r\n                const arr = response.data;\r\n                console.log(arr.length);\r\n                if (arr.length === 0) {\r\n                    setError(true);\r\n                    setErrorText(\"No tasks have been assigned for this project!\");\r\n                };\r\n                console.log(arr);\r\n                setTasks((prevTasks) => {\r\n                    return {\r\n                        ...prevTasks,\r\n                        result: arr,\r\n                    }\r\n                });\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.log(error.response.statusText);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        viewTasks();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>{props.projectTitle}</h2>\r\n            {error && <section><br /><br /><center><h1>{errorText}</h1></center></section>}\r\n            {!error && <section>\r\n                <center>\r\n                    <table>\r\n                        <tr>\r\n                            <th align=\"left\">Task</th>\r\n                            <th align=\"left\">Description</th>\r\n                            <th align=\"left\">Assigned user</th>\r\n                            <th align=\"right\">Status</th>\r\n                        </tr>\r\n                        {tasks.result.map((item) => {\r\n                            return (\r\n                                <tr key={item._id}>\r\n                                    <td align=\"left\">{item.title}</td>\r\n                                    <td align=\"left\">{item.description}</td>\r\n                                    <td align=\"left\">{item.assignedUserEmail}</td>\r\n                                    <td align=\"right\">{item.status}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </table>\r\n                </center>\r\n            </section>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItems;"]},"metadata":{},"sourceType":"module"}