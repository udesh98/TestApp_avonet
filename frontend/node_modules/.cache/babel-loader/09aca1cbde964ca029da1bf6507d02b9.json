{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UDESH\\\\Desktop\\\\Avo\\\\TestApp_avonet\\\\frontend\\\\src\\\\components\\\\Tasks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  _s();\n\n  const id = props.projectId;\n  console.log(id);\n  const user = localStorage.getItem(\"token\");\n  const date = new Date();\n  const [data, setData] = useState({\n    title: \"\",\n    description: \"\",\n    user: user,\n    status: \"pending\",\n    date: date.getTime(),\n    result: []\n  }); // const [error, setError] = useState(\"\");\n\n  const [visible, setVisible] = useState(false);\n  const navigate = useNavigate();\n\n  const showForm = e => {\n    setVisible(!visible);\n\n    if (data.title !== \"\" || data.description !== \"\") {\n      setData(prevData => {\n        return { ...prevData,\n          title: \"\",\n          description: \"\"\n        };\n      });\n    }\n  };\n\n  const handleChange = _ref => {\n    let {\n      currentTarget: input\n    } = _ref;\n    setData(prevData => {\n      return { ...prevData,\n        [input.name]: input.value\n      };\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const url = \"http://localhost:8080/api/projects/create-project\";\n      await axios.post(url, data).then(res => {\n        console.log(res.data);\n      });\n      setVisible(!visible);\n      setData(prevData => {\n        return { ...prevData,\n          title: \"\",\n          description: \"\"\n        };\n      });\n      navigate(\"/projects\");\n    } catch (error) {\n      console.log(error.response.statusText);\n    }\n  };\n\n  const selectAllUsers = async e => {\n    e.preventDefault();\n\n    try {\n      const url = \"http://localhost:8080/api/users/getAll\";\n      await axios.get(url).then(response => {\n        const arr = response.data;\n        console.log(arr);\n        setData(prevData => {\n          return { ...prevData,\n            result: arr\n          };\n        });\n      });\n    } catch (error) {\n      console.log(error.response.statusText);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: !visible && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.createProject_btn,\n        onClick: showForm,\n        type: \"button\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form_container,\n        children: [visible && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.cancel_btn,\n          onClick: showForm,\n          type: \"reset\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create A New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          name: \"title\",\n          onChange: handleChange,\n          value: data.title,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          name: \"description\",\n          onChange: handleChange,\n          value: data.description,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles.select,\n          required: true,\n          onClick: selectAllUsers,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            disabled: true,\n            selected: true,\n            children: \"Select Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), data.result.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              className: styles.select,\n              children: item._id\n            }, item._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.green_btn,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasks, \"0r18fHsB52ZvRd68NC7hVjxr6MY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/UDESH/Desktop/Avo/TestApp_avonet/frontend/src/components/Tasks/index.jsx"],"names":["useState","useEffect","axios","useNavigate","styles","Tasks","props","id","projectId","console","log","user","localStorage","getItem","date","Date","data","setData","title","description","status","getTime","result","visible","setVisible","navigate","showForm","e","prevData","handleChange","currentTarget","input","name","value","handleSubmit","preventDefault","url","post","then","res","error","response","statusText","selectAllUsers","get","arr","createProject_btn","form_container","cancel_btn","select","map","item","_id","green_btn"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst Tasks = (props) => {\r\n    const id = props.projectId;\r\n    console.log(id);\r\n\r\n    const user = localStorage.getItem(\"token\");\r\n    const date = new Date();\r\n\r\n    const [data, setData] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        user: user,\r\n        status: \"pending\",\r\n        date: date.getTime(),\r\n        result: []\r\n    });\r\n\r\n    // const [error, setError] = useState(\"\");\r\n    const [visible, setVisible] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const showForm = (e) => {\r\n        setVisible(!visible);\r\n        if (data.title !== \"\" || data.description !== \"\") {\r\n            setData(prevData => {\r\n                return {\r\n                    ...prevData,\r\n                    title: \"\",\r\n                    description: \"\"\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleChange = ({ currentTarget: input }) => {\r\n        setData(prevData => {\r\n            return {\r\n                ...prevData,\r\n                [input.name]: input.value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const url = \"http://localhost:8080/api/projects/create-project\";\r\n            await axios.post(url, data).then((res) => {\r\n                console.log(res.data);\r\n            });\r\n            setVisible(!visible);\r\n            setData(prevData => {\r\n                return {\r\n                    ...prevData,\r\n                    title: \"\",\r\n                    description: \"\"\r\n                }\r\n            });\r\n            navigate(\"/projects\");\r\n        } catch (error) {\r\n            console.log(error.response.statusText);\r\n        }\r\n    };\r\n\r\n    const selectAllUsers = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const url = \"http://localhost:8080/api/users/getAll\";\r\n            await axios.get(url).then((response) => {\r\n                const arr = response.data;\r\n                console.log(arr);\r\n                setData((prevData) => {\r\n                    return {\r\n                        ...prevData,\r\n                        result: arr,\r\n                    }\r\n                });\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.log(error.response.statusText);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <h1>Tasks</h1>\r\n                <address>{id}</address>\r\n            </section>\r\n            <br />\r\n            <center>{!visible && <button className={styles.createProject_btn} onClick={showForm} type=\"button\">Create Task</button>}</center>\r\n\r\n            {visible && <section>\r\n                <form className={styles.form_container} >\r\n                    {visible && <button className={styles.cancel_btn} onClick={showForm} type=\"reset\">x</button>}\r\n                    <h1>Create A New Task</h1>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Title\"\r\n                        name=\"title\"\r\n                        onChange={handleChange}\r\n                        value={data.title}\r\n                        required\r\n                        className={styles.input}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Description\"\r\n                        name=\"description\"\r\n                        onChange={handleChange}\r\n                        value={data.description}\r\n                        required\r\n                        className={styles.input}\r\n                    />\r\n                    <select className={styles.select} required onClick={selectAllUsers}>\r\n                        <option value=\"0\" disabled selected>Select Employee</option>\r\n                        {data.result.map((item) => {\r\n                            return (\r\n                        <option value=\"1\" className={styles.select} key={item._id}>{item._id}</option>\r\n                        )\r\n                })}\r\n                    </select>\r\n\r\n                    <button type=\"submit\" className={styles.green_btn}>\r\n                        Create Task\r\n                    </button>\r\n                </form>\r\n            </section>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}