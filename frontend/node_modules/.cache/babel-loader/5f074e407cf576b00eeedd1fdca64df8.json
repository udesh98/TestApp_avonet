{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UDESH\\\\Desktop\\\\Avo\\\\TestApp_avonet\\\\frontend\\\\src\\\\components\\\\TaskItems\\\\index.jsx\";\nimport { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseEffect(() => {\n  var _s = $RefreshSig$();\n\n  const TaskItems = props => {\n    _s();\n\n    const [error, setError] = useState(false);\n    const [errorText, setErrorText] = useState(\"\");\n    console.log(props.details.length);\n\n    if (props.details.length === 0) {\n      setError(true);\n      setErrorText(\"No tasks have been assigned for this project!\");\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.title,\n          children: [\"Project : \", props.projectTitle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: errorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"left\",\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"left\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"left\",\n                children: \"Assigned user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"right\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), props.details.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"left\",\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"left\",\n                  children: item.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"left\",\n                  children: item.assignedUserEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"right\",\n                  children: item.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 41\n                }, this)]\n              }, item._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(TaskItems, \"65TCGUC55Paq/h7vBwmLU1zPJDU=\");\n}, []);\nexport default TaskItems;","map":{"version":3,"sources":["C:/Users/UDESH/Desktop/Avo/TestApp_avonet/frontend/src/components/TaskItems/index.jsx"],"names":["useEffect","useState","styles","TaskItems","props","error","setError","errorText","setErrorText","console","log","details","length","title","projectTitle","map","item","description","assignedUserEmail","status","_id"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEAF,SAAS,CAAC,MAAM;AAAA;;AACZ,QAAMG,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AACA,UAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,OAAN,CAAcC,MAA1B;;AAEA,QAAIR,KAAK,CAACO,OAAN,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC5BN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,MAAAA,YAAY,CAAC,+CAAD,CAAZ;AACH;;AAAA;AAED,wBACI;AAAA,8BACI;AAAA,gCAAQ;AAAA;AAAA;AAAA;AAAA,gBAAR,eAAc;AAAA;AAAA;AAAA;AAAA,gBAAd,eAAoB;AAAI,UAAA,SAAS,EAAEN,MAAM,CAACW,KAAtB;AAAA,mCAAwCT,KAAK,CAACU,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKT,KAAK,iBAAI;AAAA,gCAAS;AAAA;AAAA;AAAA;AAAA,gBAAT,eAAe;AAAA;AAAA;AAAA;AAAA,gBAAf,eAAqB;AAAA,iCAAQ;AAAA,sBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFd,eAGK;AAAA,+BACG;AAAA,iCACI;AAAA,oCACI;AAAA,sCACI;AAAI,gBAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,gBAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAI,gBAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAI,gBAAA,KAAK,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAOKH,KAAK,CAACO,OAAN,CAAcI,GAAd,CAAmBC,IAAD,IAAU;AACzB,kCACI;AAAA,wCACI;AAAI,kBAAA,KAAK,EAAC,MAAV;AAAA,4BAAkBA,IAAI,CAACH;AAAvB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAI,kBAAA,KAAK,EAAC,MAAV;AAAA,4BAAkBG,IAAI,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAI,kBAAA,KAAK,EAAC,MAAV;AAAA,4BAAkBD,IAAI,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAI,kBAAA,KAAK,EAAC,OAAV;AAAA,4BAAmBF,IAAI,CAACG;AAAxB;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA,iBAASH,IAAI,CAACI,GAAd;AAAA;AAAA;AAAA;AAAA,sBADJ;AAQH,aATA,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH,GAvCD;;AADY,KACNjB,SADM;AAyCf,CAzCQ,EAyCN,EAzCM,CAAT;AA2CA,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nuseEffect(() => {\r\n    const TaskItems = (props) => {\r\n        const [error, setError] = useState(false);\r\n        const [errorText, setErrorText] = useState(\"\");\r\n    \r\n        console.log(props.details.length);\r\n    \r\n        if (props.details.length === 0) {\r\n            setError(true);\r\n            setErrorText(\"No tasks have been assigned for this project!\");\r\n        };\r\n    \r\n        return (\r\n            <div>\r\n                <center><br /><br /><h2 className={styles.title}>Project : {props.projectTitle}</h2></center>\r\n                {error && <section><br /><br /><center><h1>{errorText}</h1></center></section>}\r\n                {<section>\r\n                    <center>\r\n                        <table>\r\n                            <tr>\r\n                                <th align=\"left\">Task</th>\r\n                                <th align=\"left\">Description</th>\r\n                                <th align=\"left\">Assigned user</th>\r\n                                <th align=\"right\">Status</th>\r\n                            </tr>\r\n                            {props.details.map((item) => {\r\n                                return (\r\n                                    <tr key={item._id}>\r\n                                        <td align=\"left\">{item.title}</td>\r\n                                        <td align=\"left\">{item.description}</td>\r\n                                        <td align=\"left\">{item.assignedUserEmail}</td>\r\n                                        <td align=\"right\">{item.status}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </table>\r\n                    </center>\r\n                </section>}\r\n            </div>\r\n        )\r\n    }\r\n}, [])\r\n\r\nexport default TaskItems;"]},"metadata":{},"sourceType":"module"}