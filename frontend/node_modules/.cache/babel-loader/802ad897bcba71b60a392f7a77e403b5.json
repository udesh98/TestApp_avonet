{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UDESH\\\\Desktop\\\\Avo\\\\TestApp_avonet\\\\frontend\\\\src\\\\components\\\\Tasks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  _s();\n\n  const user = localStorage.getItem(\"token\");\n  const date = new Date();\n  const [data, setData] = useState({\n    projectId: props.projectId,\n    assignedUserEmail: \"\",\n    title: \"\",\n    description: \"\",\n    userId: user,\n    status: \"pending\",\n    date: date.getTime(),\n    result: []\n  }); // const [error, setError] = useState(\"\");\n\n  const [visible, setVisible] = useState(false);\n  const navigate = useNavigate();\n\n  const showForm = e => {\n    setVisible(!visible);\n\n    if (data.title !== \"\" || data.description !== \"\" || data.assignedUserEmail !== \"\") {\n      setData(prevData => {\n        return { ...prevData,\n          title: \"\",\n          description: \"\",\n          assignedUserEmail: \"\"\n        };\n      });\n    }\n  };\n\n  const handleChange = _ref => {\n    let {\n      currentTarget: input\n    } = _ref;\n    setData(prevData => {\n      return { ...prevData,\n        [input.name]: input.value\n      };\n    });\n  };\n\n  const handleSelect = _ref2 => {\n    let {\n      currentTarget: select\n    } = _ref2;\n    setData(prevData => {\n      return { ...prevData,\n        [select.name]: select.value\n      };\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const url = \"http://localhost:8080/api/projects/tasks/create-task\";\n      await axios.post(url, data).then(res => {\n        console.log(res.data);\n      });\n      setVisible(!visible);\n      setData(prevData => {\n        return { ...prevData,\n          title: \"\",\n          description: \"\",\n          assignedUserEmail: \"\"\n        };\n      });\n      navigate(\"/projects/tasks\");\n    } catch (error) {\n      console.log(error.response.statusText);\n    }\n  };\n\n  const selectAllUsers = async e => {\n    e.preventDefault();\n\n    try {\n      const url = \"http://localhost:8080/api/users/getAll\";\n      await axios.get(url).then(response => {\n        const arr = response.data;\n        console.log(arr);\n        setData(prevData => {\n          return { ...prevData,\n            result: arr\n          };\n        });\n      });\n    } catch (error) {\n      console.log(error.response.statusText);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n        children: props.projectId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: !visible && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.createProject_btn,\n        onClick: showForm,\n        type: \"button\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form_container,\n        onSubmit: handleSubmit,\n        children: [visible && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.cancel_btn,\n          onClick: showForm,\n          type: \"reset\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create A New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          name: \"title\",\n          onChange: handleChange,\n          value: data.title,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          name: \"description\",\n          onChange: handleChange,\n          value: data.description,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles.select,\n          required: true,\n          onSelect: handleSelect,\n          onClick: selectAllUsers,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"Select Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), data.result.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"assignedUserEmail\",\n              value: item.email,\n              className: styles.select,\n              children: [item.firstName, \"\\xA0\", item.lastName]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.green_btn,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasks, \"gJZ22kiTHsZsdOLXHC03SSNK0lI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/UDESH/Desktop/Avo/TestApp_avonet/frontend/src/components/Tasks/index.jsx"],"names":["useState","useEffect","axios","useNavigate","styles","Tasks","props","user","localStorage","getItem","date","Date","data","setData","projectId","assignedUserEmail","title","description","userId","status","getTime","result","visible","setVisible","navigate","showForm","e","prevData","handleChange","currentTarget","input","name","value","handleSelect","select","handleSubmit","preventDefault","url","post","then","res","console","log","error","response","statusText","selectAllUsers","get","arr","createProject_btn","form_container","cancel_btn","map","item","email","firstName","lastName","_id","green_btn"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst Tasks = (props) => {\r\n    const user = localStorage.getItem(\"token\");\r\n    const date = new Date();\r\n\r\n    const [data, setData] = useState({\r\n        projectId: props.projectId,\r\n        assignedUserEmail: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        userId: user,\r\n        status: \"pending\",\r\n        date: date.getTime(),\r\n        result: []\r\n    });\r\n\r\n    // const [error, setError] = useState(\"\");\r\n    const [visible, setVisible] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const showForm = (e) => {\r\n        setVisible(!visible);\r\n        if (data.title !== \"\" || data.description !== \"\" || data.assignedUserEmail !== \"\") {\r\n            setData(prevData => {\r\n                return {\r\n                    ...prevData,\r\n                    title: \"\",\r\n                    description: \"\",\r\n                    assignedUserEmail: \"\"\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleChange = ({ currentTarget: input }) => {\r\n        setData(prevData => {\r\n            return {\r\n                ...prevData,\r\n                [input.name]: input.value,\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSelect = ({ currentTarget: select }) => {\r\n        setData(prevData => {\r\n            return {\r\n                ...prevData,\r\n                [select.name]: select.value,\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const url = \"http://localhost:8080/api/projects/tasks/create-task\";\r\n            await axios.post(url, data).then((res) => {\r\n                console.log(res.data);\r\n            });\r\n            setVisible(!visible);\r\n            setData(prevData => {\r\n                return {\r\n                    ...prevData,\r\n                    title: \"\",\r\n                    description: \"\",\r\n                    assignedUserEmail: \"\"\r\n                }\r\n            });\r\n            navigate(\"/projects/tasks\");\r\n        } catch (error) {\r\n            console.log(error.response.statusText);\r\n        }\r\n    };\r\n\r\n    const selectAllUsers = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const url = \"http://localhost:8080/api/users/getAll\";\r\n            await axios.get(url).then((response) => {\r\n                const arr = response.data;\r\n                console.log(arr);\r\n                setData((prevData) => {\r\n                    return {\r\n                        ...prevData,\r\n                        result: arr,\r\n                    }\r\n                });\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.log(error.response.statusText);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <h1>Tasks</h1>\r\n                <address>{props.projectId}</address>\r\n            </section>\r\n            <br />\r\n            <center>{!visible && <button className={styles.createProject_btn} onClick={showForm} type=\"button\">Create Task</button>}</center>\r\n\r\n            {visible && <section>\r\n                <form className={styles.form_container} onSubmit={handleSubmit}>\r\n                    {visible && <button className={styles.cancel_btn} onClick={showForm} type=\"reset\">x</button>}\r\n                    <h1>Create A New Task</h1>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Title\"\r\n                        name=\"title\"\r\n                        onChange={handleChange}\r\n                        value={data.title}\r\n                        required\r\n                        className={styles.input}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Description\"\r\n                        name=\"description\"\r\n                        onChange={handleChange}\r\n                        value={data.description}\r\n                        required\r\n                        className={styles.input}\r\n                    />\r\n                    <select className={styles.select} required onSelect={handleSelect} onClick={selectAllUsers}>\r\n                        <option value=\"\" disabled selected>Select Employee</option>\r\n                        {data.result.map((item) => {\r\n                            return (\r\n                                <option name=\"assignedUserEmail\" value={item.email} className={styles.select} key={item._id}>{item.firstName}&nbsp;{item.lastName}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n\r\n                    <button type=\"submit\" className={styles.green_btn}>\r\n                        Create Task\r\n                    </button>\r\n                </form>\r\n            </section>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}