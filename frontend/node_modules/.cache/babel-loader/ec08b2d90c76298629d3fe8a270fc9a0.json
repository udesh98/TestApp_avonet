{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UDESH\\\\Desktop\\\\Avo\\\\TestApp_avonet\\\\frontend\\\\src\\\\components\\\\Tasks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport TaskItems from \"../TaskItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  _s();\n\n  const user = localStorage.getItem(\"token\");\n  const date = new Date();\n  const [data, setData] = useState({\n    projectId: props.projectId,\n    assignedUserEmail: \"\",\n    title: \"\",\n    description: \"\",\n    userId: user,\n    status: \"pending\",\n    date: date.getTime(),\n    result: []\n  });\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const navigate = useNavigate();\n\n  const showForm = e => {\n    setVisible(!visible);\n\n    if (data.title !== \"\" || data.description !== \"\" || data.assignedUserEmail !== \"\") {\n      setData(prevData => {\n        return { ...prevData,\n          title: \"\",\n          description: \"\",\n          assignedUserEmail: \"\"\n        };\n      });\n    }\n  };\n\n  const handleChange = _ref => {\n    let {\n      currentTarget: input,\n      currentTarget: select\n    } = _ref;\n    setData(prevData => {\n      return { ...prevData,\n        [input.name]: input.value,\n        assignedUserEmail: select.value\n      };\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const url = \"http://localhost:8080/api/projects/tasks/create-task\";\n      await axios.post(url, data).then(res => {\n        console.log(res.data);\n      });\n      setVisible(!visible);\n      setData({\n        title: \"\",\n        description: \"\",\n        assignedUserEmail: \"\"\n      });\n      viewTasks();\n      navigate(\"/projects/tasks\");\n    } catch (error) {\n      console.log(error.response.statusText);\n    }\n  };\n\n  const selectAllUsers = async e => {\n    e.preventDefault();\n\n    try {\n      const url = \"http://localhost:8080/api/users/getAll\";\n      await axios.get(url, {\n        params: {\n          token: user\n        }\n      }).then(response => {\n        const arr = response.data; // console.log(arr);\n\n        setData(prevData => {\n          return { ...prevData,\n            result: arr\n          };\n        });\n      });\n    } catch (error) {\n      console.log(error.response.statusText);\n    }\n  };\n\n  const viewTasks = async () => {\n    try {\n      const url = \"http://localhost:8080/api/projects/tasks/\";\n      await axios.get(url, {\n        params: {\n          projectId: props.projectId\n        }\n      }).then(response => {\n        const arr = response.data; // console.log(arr.length);\n\n        if (arr.length === 0) {\n          setError(true);\n          setErrorText(\"No tasks have been assigned for this project!\");\n        }\n\n        ; // console.log(arr);\n\n        setTasks(arr);\n      });\n    } catch (error) {\n      console.log(error.response.statusText);\n    }\n  };\n\n  console.log(props);\n  useEffect(() => {\n    viewTasks();\n    viewTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 66\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: !visible && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.createProject_btn,\n        onClick: showForm,\n        type: \"button\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: styles.form_container,\n        onSubmit: handleSubmit,\n        children: [visible && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.cancel_btn,\n          onClick: showForm,\n          type: \"reset\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create A New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          name: \"title\",\n          onChange: handleChange,\n          value: data.title,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          name: \"description\",\n          onChange: handleChange,\n          value: data.description,\n          required: true,\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles.select,\n          required: true,\n          onChange: handleChange,\n          onClick: selectAllUsers,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"Select Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), data.result.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              type: \"text\",\n              name: \"assignedUserEmail\",\n              value: item.email,\n              className: styles.select,\n              children: [item.firstName, \"\\xA0\", item.lastName]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.green_btn,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(TaskItems, {\n        details: tasks,\n        projectTitle: props.projectTitle,\n        error: error,\n        errorText: errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasks, \"M07claCsPoCzJRloCkGfYWjkNXI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["C:/Users/UDESH/Desktop/Avo/TestApp_avonet/frontend/src/components/Tasks/index.jsx"],"names":["useEffect","useState","axios","useNavigate","styles","TaskItems","Tasks","props","user","localStorage","getItem","date","Date","data","setData","projectId","assignedUserEmail","title","description","userId","status","getTime","result","tasks","setTasks","error","setError","errorText","setErrorText","visible","setVisible","navigate","showForm","e","prevData","handleChange","currentTarget","input","select","name","value","handleSubmit","preventDefault","url","post","then","res","console","log","viewTasks","response","statusText","selectAllUsers","get","params","token","arr","length","createProject_btn","form_container","cancel_btn","map","item","email","firstName","lastName","_id","green_btn","projectTitle"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./styles.module.css\";\r\nimport TaskItems from \"../TaskItems\";\r\n\r\nconst Tasks = (props) => {\r\n    const user = localStorage.getItem(\"token\");\r\n    const date = new Date();\r\n\r\n    const [data, setData] = useState({\r\n        projectId: props.projectId,\r\n        assignedUserEmail: \"\",\r\n        title: \"\",\r\n        description: \"\",\r\n        userId: user,\r\n        status: \"pending\",\r\n        date: date.getTime(),\r\n        result: []\r\n    });\r\n    const [tasks, setTasks] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [errorText, setErrorText] = useState(\"\");\r\n    const [visible, setVisible] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const showForm = (e) => {\r\n        setVisible(!visible);\r\n        if (data.title !== \"\" || data.description !== \"\" || data.assignedUserEmail !== \"\") {\r\n            setData(prevData => {\r\n                return {\r\n                    ...prevData,\r\n                    title: \"\",\r\n                    description: \"\",\r\n                    assignedUserEmail: \"\"\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleChange = ({ currentTarget: input, currentTarget: select }) => {\r\n        setData(prevData => {\r\n            return {\r\n                ...prevData,\r\n                [input.name]: input.value,\r\n                assignedUserEmail: select.value\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const url = \"http://localhost:8080/api/projects/tasks/create-task\";\r\n            await axios.post(url, data).then((res) => {\r\n                console.log(res.data);\r\n            });\r\n            setVisible(!visible);\r\n            setData({\r\n                    title: \"\",\r\n                    description: \"\",\r\n                    assignedUserEmail: \"\"\r\n                }\r\n            );\r\n            viewTasks();\r\n            navigate(\"/projects/tasks\");\r\n        } catch (error) {\r\n            console.log(error.response.statusText);\r\n        }\r\n    };\r\n\r\n    const selectAllUsers = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const url = \"http://localhost:8080/api/users/getAll\";\r\n            await axios.get(url, { params: { token: user } }).then((response) => {\r\n                const arr = response.data;\r\n                // console.log(arr);\r\n                setData((prevData) => {\r\n                    return {\r\n                        ...prevData,\r\n                        result: arr\r\n                    }\r\n                });\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.log(error.response.statusText);\r\n        }\r\n    };\r\n\r\n    const viewTasks = async () => {\r\n        try {\r\n            const url = \"http://localhost:8080/api/projects/tasks/\";\r\n            await axios.get(url, { params: { projectId: props.projectId } }).then((response) => {\r\n                const arr = response.data;\r\n                // console.log(arr.length);\r\n                if (arr.length === 0) {\r\n                    setError(true);\r\n                    setErrorText(\"No tasks have been assigned for this project!\");\r\n                };\r\n                // console.log(arr);\r\n                setTasks(arr);\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.log(error.response.statusText);\r\n        }\r\n    };\r\n\r\n    console.log(props);\r\n\r\n    useEffect(() => {\r\n        viewTasks();\r\n        viewTasks();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <br /><br /><hr /><center><h1>Tasks</h1></center><hr />\r\n                {/* <address>{props.projectId}</address> */}\r\n            </section>\r\n            <center>{!visible && <button className={styles.createProject_btn} onClick={showForm} type=\"button\">Create Task</button>}</center>\r\n\r\n            {visible && <section>\r\n                <form className={styles.form_container} onSubmit={handleSubmit}>\r\n                    {visible && <button className={styles.cancel_btn} onClick={showForm} type=\"reset\">x</button>}\r\n                    <h1>Create A New Task</h1>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Title\"\r\n                        name=\"title\"\r\n                        onChange={handleChange}\r\n                        value={data.title}\r\n                        required\r\n                        className={styles.input}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Description\"\r\n                        name=\"description\"\r\n                        onChange={handleChange}\r\n                        value={data.description}\r\n                        required\r\n                        className={styles.input}\r\n                    />\r\n                    <select className={styles.select} required onChange={handleChange} onClick={selectAllUsers}>\r\n                        <option value=\"\" disabled selected>Select Employee</option>\r\n                        {data.result.map((item) => {\r\n                            return (\r\n                                <option type=\"text\" name=\"assignedUserEmail\" value={item.email} className={styles.select} key={item._id}>{item.firstName}&nbsp;{item.lastName}</option>\r\n                            )\r\n                        })}\r\n                    </select>\r\n\r\n                    <button type=\"submit\" className={styles.green_btn}>\r\n                        Create Task\r\n                    </button>\r\n                </form>\r\n            </section>}\r\n\r\n            <section>\r\n                <TaskItems details={tasks} projectTitle={props.projectTitle} error={error} errorText={errorText}/>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}